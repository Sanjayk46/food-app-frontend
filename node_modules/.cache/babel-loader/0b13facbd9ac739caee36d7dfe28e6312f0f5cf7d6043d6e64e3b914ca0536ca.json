{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanjay\\\\Desktop\\\\B50WETamil\\\\food-app frontend\\\\src\\\\hooks\\\\useAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, createContext, useContext } from \"react\";\nimport { toast } from \"react-toastify\";\nimport * as userService from '../services/userservice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(userService.getUser());\n  const login = async (email, password) => {\n    try {\n      const user = await userService.login(email, password);\n      setUser(user);\n      toast.success('login successfully');\n    } catch (error) {\n      toast.error(error.response.data);\n    }\n  };\n  const register = async data => {\n    try {\n      const user = await userService.register(data);\n      setUser(user);\n      toast.success('Register Successful');\n    } catch (error) {\n      toast.error(error.response.data);\n    }\n  };\n  const updateProfile = async user => {\n    const updatedUser = await userService.updateProfile(user);\n    toast.success('Profile Update Was Successful');\n    if (updatedUser) setUser(updatedUser);\n  };\n  const changePassword = async passwords => {\n    await userService.changePassword(passwords);\n    logout();\n    toast.success('Password Changed Successfully, Please Login Again!');\n  };\n  const logout = () => {\n    userService.logout();\n    setUser(null);\n    toast.success(\"logout successful\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      updateProfile,\n      changePassword,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"d433BNb37faEp65cAsZrPTk+Szo=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","createContext","useContext","toast","userService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","getUser","login","email","password","success","error","response","data","register","updateProfile","updatedUser","changePassword","passwords","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/sanjay/Desktop/B50WETamil/food-app frontend/src/hooks/useAuth.js"],"sourcesContent":["import { useState, createContext, useContext } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as userService from '../services/userservice';\r\n\r\nconst AuthContext  = createContext(null);\r\n\r\nexport const AuthProvider =({ children })=>{\r\n    const [user, setUser] = useState(userService.getUser());\r\n    const login  = async (email, password) =>{\r\n        try {\r\n            const user = await userService.login(email, password);\r\n            setUser(user);\r\n            toast.success('login successfully')\r\n        } catch (error) {\r\n            toast.error(error.response.data);\r\n        }\r\n    };\r\n    const register = async data =>{\r\n       try {\r\n        const user = await userService.register(data);\r\n        setUser(user);\r\n        toast.success('Register Successful') \r\n       } catch (error) {\r\n         toast.error(error.response.data);\r\n       }\r\n    }\r\n    const updateProfile = async user => {\r\n        const updatedUser = await userService.updateProfile(user);\r\n        toast.success('Profile Update Was Successful');\r\n        if (updatedUser) setUser(updatedUser);\r\n      };\r\n      const changePassword = async passwords => {\r\n        await userService.changePassword(passwords);\r\n        logout();\r\n        toast.success('Password Changed Successfully, Please Login Again!');\r\n      };\r\n    const logout =()=>{\r\n        userService.logout();\r\n        setUser(null);\r\n        toast.success(\"logout successful\")\r\n    };\r\n\r\n    return(\r\n        <AuthContext.Provider value={{user ,login ,register, updateProfile,changePassword,logout}}>\r\n           {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\nexport const useAuth = ()=>useContext(AuthContext);"],"mappings":";;;AAAA,SAASA,QAAQ,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAC3D,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,KAAKC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,WAAW,gBAAIN,aAAa,CAAC,IAAI,CAAC;AAExC,OAAO,MAAMO,YAAY,GAAEA,CAAC;EAAEC;AAAS,CAAC,KAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAACI,WAAW,CAACS,OAAO,CAAC,CAAC,CAAC;EACvD,MAAMC,KAAK,GAAI,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAI;IACrC,IAAI;MACA,MAAML,IAAI,GAAG,MAAMP,WAAW,CAACU,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC;MACrDJ,OAAO,CAACD,IAAI,CAAC;MACbR,KAAK,CAACc,OAAO,CAAC,oBAAoB,CAAC;IACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZf,KAAK,CAACe,KAAK,CAACA,KAAK,CAACC,QAAQ,CAACC,IAAI,CAAC;IACpC;EACJ,CAAC;EACD,MAAMC,QAAQ,GAAG,MAAMD,IAAI,IAAG;IAC3B,IAAI;MACH,MAAMT,IAAI,GAAG,MAAMP,WAAW,CAACiB,QAAQ,CAACD,IAAI,CAAC;MAC7CR,OAAO,CAACD,IAAI,CAAC;MACbR,KAAK,CAACc,OAAO,CAAC,qBAAqB,CAAC;IACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdf,KAAK,CAACe,KAAK,CAACA,KAAK,CAACC,QAAQ,CAACC,IAAI,CAAC;IAClC;EACH,CAAC;EACD,MAAME,aAAa,GAAG,MAAMX,IAAI,IAAI;IAChC,MAAMY,WAAW,GAAG,MAAMnB,WAAW,CAACkB,aAAa,CAACX,IAAI,CAAC;IACzDR,KAAK,CAACc,OAAO,CAAC,+BAA+B,CAAC;IAC9C,IAAIM,WAAW,EAAEX,OAAO,CAACW,WAAW,CAAC;EACvC,CAAC;EACD,MAAMC,cAAc,GAAG,MAAMC,SAAS,IAAI;IACxC,MAAMrB,WAAW,CAACoB,cAAc,CAACC,SAAS,CAAC;IAC3CC,MAAM,CAAC,CAAC;IACRvB,KAAK,CAACc,OAAO,CAAC,oDAAoD,CAAC;EACrE,CAAC;EACH,MAAMS,MAAM,GAAEA,CAAA,KAAI;IACdtB,WAAW,CAACsB,MAAM,CAAC,CAAC;IACpBd,OAAO,CAAC,IAAI,CAAC;IACbT,KAAK,CAACc,OAAO,CAAC,mBAAmB,CAAC;EACtC,CAAC;EAED,oBACIX,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAACjB,IAAI;MAAEG,KAAK;MAAEO,QAAQ;MAAEC,aAAa;MAACE,cAAc;MAACE;IAAM,CAAE;IAAAjB,QAAA,EACtFA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE/B,CAAC;AAAAtB,EAAA,CAzCYF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AA0CzB,OAAO,MAAM0B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAIjC,UAAU,CAACK,WAAW,CAAC;AAAA;AAAC4B,GAAA,CAAtCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}