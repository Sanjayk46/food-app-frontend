{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanjay\\\\Desktop\\\\B50WETamil\\\\food-app frontend\\\\src\\\\hooks\\\\useAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, createContext, useContext } from \"react\";\nimport { toast } from \"react-toastify\";\nimport * as userService from '../services/userservice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(userService.getUser());\n  const login = async (email, password) => {\n    try {\n      const user = await userService.login(email, password);\n      setUser(user);\n      toast.success('login successfully');\n    } catch (error) {\n      toast.error(error.response.data);\n    }\n  };\n  const register = async data => {\n    try {\n      const user = await userService.register(data);\n      setUser(user);\n      toast.success('Register Successful');\n    } catch (error) {\n      toast.error(error.response.data);\n    }\n  };\n  const forgotPassword = async data => {\n    try {\n      const user = await userService.forgotPassword(data);\n      toast.success('password send your email');\n    } catch (error) {\n      toast.error(error.response.data);\n    }\n  };\n  const resetPassword = async data => {\n    try {\n      const user = await userService.resetPassword(data);\n      setUser(user);\n      toast.success('your password reset successfully');\n    } catch (error) {\n      toast.error(error.response.data);\n    }\n  };\n  const updateProfile = async user => {\n    const updatedUser = await userService.updateProfile(user);\n    toast.success('Profile Update Was Successful');\n    if (updatedUser) setUser(updatedUser);\n  };\n  const changePassword = async passwords => {\n    await userService.changePassword(passwords);\n    logout();\n    toast.success('Password Changed Successfully, Please Login Again!');\n  };\n  const logout = () => {\n    userService.logout();\n    setUser(null);\n    toast.success(\"logout successful\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      updateProfile,\n      forgotPassword,\n      resetPassword,\n      changePassword,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"d433BNb37faEp65cAsZrPTk+Szo=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","createContext","useContext","toast","userService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","getUser","login","email","password","success","error","response","data","register","forgotPassword","resetPassword","updateProfile","updatedUser","changePassword","passwords","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/sanjay/Desktop/B50WETamil/food-app frontend/src/hooks/useAuth.js"],"sourcesContent":["import { useState, createContext, useContext } from \"react\";\nimport { toast } from \"react-toastify\";\nimport * as userService from '../services/userservice';\n\nconst AuthContext  = createContext(null);\n\nexport const AuthProvider =({ children })=>{\n    const [user, setUser] = useState(userService.getUser());\n    const login  = async (email, password) =>{\n        try {\n            const user = await userService.login(email, password);\n            setUser(user);\n            toast.success('login successfully')\n        } catch (error) {\n            toast.error(error.response.data);\n        }\n    };\n    const register = async data =>{\n       try {\n        const user = await userService.register(data);\n        setUser(user);\n        toast.success('Register Successful') \n       } catch (error) {\n         toast.error(error.response.data);\n       }\n    }\n    const forgotPassword = async data =>{\n        try {\n            const user = await userService.forgotPassword(data);\n            toast.success('password send your email') \n        } catch (error) {\n            toast.error(error.response.data); \n        }\n    }\n    const resetPassword = async data =>{\n        try {\n            const user = await userService.resetPassword(data);\n            setUser(user);\n            toast.success('your password reset successfully') \n        } catch (error) {\n            toast.error(error.response.data); \n        }\n    }\n    const updateProfile = async user => {\n        const updatedUser = await userService.updateProfile(user);\n        toast.success('Profile Update Was Successful');\n        if (updatedUser) setUser(updatedUser);\n      };\n\n      const changePassword = async passwords => {\n        await userService.changePassword(passwords);\n        logout();\n        toast.success('Password Changed Successfully, Please Login Again!');\n      };\n    const logout =()=>{\n        userService.logout();\n        setUser(null);\n        toast.success(\"logout successful\")\n    };\n\n    return(\n        <AuthContext.Provider value={{user ,login ,register, updateProfile, forgotPassword,resetPassword,changePassword, logout}}>\n           {children}\n        </AuthContext.Provider>\n    );\n}\nexport const useAuth = ()=>useContext(AuthContext);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}