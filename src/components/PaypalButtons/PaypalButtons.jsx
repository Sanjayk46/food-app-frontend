// import React, { useEffect } from 'react';
// import { useLoading } from '../../hooks/useLoading';
// import { pay } from '../../services/orderservice';
// import { useCart } from '../../hooks/useCart';
// import { toast } from 'react-toastify';
// import { useNavigate } from 'react-router-dom';
// //import RazorpayButton from './RazorpayButton';
// import Button from '../Button/Button';

// export default function RazorpayButtons({ order }) {
//   return (
//     <div>
//       <Buttons order={order} />
//     </div>
//   );
// }

// function Buttons({ order }) {
//   const { clearCart } = useCart();
//   const navigate = useNavigate();
//   const { showLoading, hideLoading } = useLoading();

//   useEffect(() => {
//     // Load Razorpay script asynchronously
//     const script = document.createElement('script');
//     script.src = 'https://checkout.razorpay.com/v1/checkout.js';
//     script.async = true;
//     document.body.appendChild(script);
//   }, []);

//   const openRazorpayCheckout = async () => {
//     const options = {
//       key: 'rzp_test_KAwsECdNWYCUFY', // Replace with your Razorpay key
//       amount: Math.round(order.totalPrice * 100), // Amount is in currency subunits (e.g., cents for USD)
//       currency: 'INR', // Replace with your currency
//       name: 'sanjay corp ltd',
//       description: 'food items',
//       // order_id: '', // Replace with the order ID generated by your server
//       prefill: {
//         email: 'sanjayks8046@gmail.com',
//         contact: '1234567890',
//       },
//       theme: {
//         color: '#528FF0',
//       },
//       handler: async function (response) {
//         try {
//           // Handle successful payment
//           const orderId = await pay(response.razorpay_payment_id); // Call your service to process the payment
//           console.log(orderId);
//           clearCart();
//           toast.success('Payment Saved Successfully', 'Success');
//           navigate('/track/' + orderId);
//         } catch (error) {
//           toast.error('Payment Save Failed', 'Error');
//         }
//       },
//       modal: {
//         ondismiss: function () {
//           // Handle modal close
//           toast.error('Payment Cancelled', 'Error');
//         },
//       },
//     };

//     const razorpay = new window.Razorpay(options);
//     razorpay.open();
//   };

//   return (
//     <Button type="submit" text="Pay with Razorpay" onClick={openRazorpayCheckout}></Button>
//   );
// }
import React, { useEffect } from 'react';
import { useLoading } from '../../hooks/useLoading';
import { useCart } from '../../hooks/useCart';
import { toast } from 'react-toastify';
import { useNavigate } from 'react-router-dom';
import axios from 'axios';
import Button from '../Button/Button';

export default function RazorpayButtons({ order }) {
  return (
    <div>
      <Buttons order={order} />
    </div>
  );
}

function Buttons({ order }) {
  const { clearCart } = useCart();
  const navigate = useNavigate();
  const { showLoading, hideLoading } = useLoading();

  useEffect(() => {
    // Load Razorpay script asynchronously
    const script = document.createElement('script');
    script.src = 'https://checkout.razorpay.com/v1/checkout.js';
    script.async = true;
    document.body.appendChild(script);
  }, []);

  const openRazorpayCheckout = async () => {
    showLoading();

    try {
      // Create order by calling the backend endpoint
      const { data: razorpayOrder } = await axios.post('/api/create-order', {
        amount: order.totalPrice,
        currency: 'INR',
      });

      const options = {
        key: 'rzp_test_KAwsECdNWYCUFY', // Replace with your Razorpay Key
        amount: razorpayOrder.amount, // Amount from backend
        currency: razorpayOrder.currency, // Currency from backend
        name: 'sanjay corp ltd',
        description: 'food items',
        order_id: razorpayOrder.id, // Order ID from backend
        prefill: {
          email: 'sanjayks8046@gmail.com',
          contact: '1234567890',
        },
        theme: {
          color: '#528FF0',
        },
        handler: async function (response) {
          try {
            const paymentId = response.razorpay_payment_id;
            const orderId = await axios.post('/api/process-payment', { paymentId });
            clearCart();
            toast.success('Payment Saved Successfully', 'Success');
            navigate('/track/' + orderId.data);
          } catch (error) {
            toast.error('Payment Save Failed', 'Error');
          }
        },
        modal: {
          ondismiss: function () {
            toast.error('Payment Cancelled', 'Error');
          },
        },
      };

      const razorpay = new window.Razorpay(options);
      razorpay.open();
    } catch (error) {
      console.error('Error initializing Razorpay:', error);
      toast.error('Payment Initialization Failed', 'Error');
    } finally {
      hideLoading();
    }
  };

  return (
    <Button
      type="submit"
      text="Pay with Razorpay"
      onClick={openRazorpayCheckout}
    />
  );
}
